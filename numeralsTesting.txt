numeralsTesting.txt

//this section written just before massive rewrite between initial commit
// and the commit after it - '9s fixed, 0s broken'

9s logic:
reversed array i positions:

		roman		arrNum
#########################
i 0 	M 	1000 	1s
i 1 	D 	500 	10s
i 2 	C 	100 	100s
i 3 	L 	50 		1000s
i 4 	X 	10 		
i 5 	V 	5 		
i 6 	I 	1 		


test 	exp out 	act out		

9 		IX 			'error'
29 		XXIX
97 		XCVII 		LVCVII
99 		XCIX
649 	DCXLIX
798 	DCCXCVII
891 	DCCCXCI
3999 	MMMCMXCIX

2 problems:
in the I position, get a object undefined, since it tries to find an i+1 (which doesn't exist at end of array)

ahhhh my math is wrong too. I think I need to reimplement this using an array to store each digit of num, then converting num by position.

so, push each digit of num into an array, starting with smallest, going up to largest
then do transposition between the arrays, equations as follows:

format:
num index | num | roman val | roman indeces

0 9 == IX 	0,2

1 90 == XC 	2,4

2 900 == CM 4,6

i*2, i*2+2
---------------------
0  8   VIII 	1,0,0,0

1  80  LXXX 	3,2,2,2

2  800 DCCC 	5,4,4,4


i*2+1, i*2
---------------------
0 	4 	IV 	0,1

1 	40 	XL 	2,3

2 	400 CD 	5,4

i*2, i*2+1


testing - train of thought...
##############################
97

expected XCVII

actual LX XIX

fixed 90 part (unshift instead of push)

now for 7

XIX when should be VII

7   == VII
70  == LXX
700 == DCC

okay well now it just can't handle 0s